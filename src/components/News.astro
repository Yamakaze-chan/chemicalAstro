---
import '../styles/global.css';
---
<section class="bg-white py-12 text-[var(--color-3)]">
  <div class="max-w-7xl mx-auto px-4">
    <h1 class="text-4xl text-center text-[var(--color-1)] font-bold font-inter mt-[20%] md:mt-[5%] mb-16">
      TIN T·ª®C
    </h1>

    <!-- V√πng s·∫Ω render b·∫±ng JS -->
    <div id="news-section" class="flex flex-col gap-10 text-justify"></div>

  </div>
</section>

<script type="module">
  const container = document.getElementById("news-section");

  function getFirstImage(content) {
    const match = content.match(/<img[^>]*src=["']([^"']+)["']/i);
    return match ? match[1] : "/images/placeholder.jpg";
  }

  function getFirstText(content) {
    const match = content.match(/<(h2|p)[^>]*>(.*?)<\/\1>/i);
    if (!match) return "";
    const rawText = match[2];
    return rawText.replace(/<[^>]+>/g, "").trim();
  }

  function formatDate(isoString) {
    const date = new Date(isoString);
    return date.toLocaleString("vi-VN", {
      day: "2-digit", month: "2-digit", year: "numeric",
      hour: "2-digit", minute: "2-digit"
    });
  }

  const pagination = document.createElement("div");
  pagination.id = "pagination";
  pagination.className = "mt-10 flex justify-center gap-2 flex-wrap";
  container.after(pagination);

  let newsData = [];
  const itemsPerPage = 7;
  let currentPage = 1;

  function renderPagination(totalPages) {
    pagination.innerHTML = "";
    const maxVisible = 5;
    const buttons = [];

    const pushButton = (label, page = null, isActive = false, isDots = false) => {
      const btn = document.createElement("button");
      btn.textContent = label;
      btn.disabled = isDots;
      btn.className = `px-4 py-2 rounded border text-sm transition ${
        isActive
          ? "bg-[var(--color-3)] text-white border-[var(--color-3)]"
          : "bg-white text-gray-700 border-gray-300 hover:bg-gray-100"
      }`;
      if (!isDots) btn.onclick = () => goToPage(page);
      pagination.appendChild(btn);
    };

    if (totalPages <= maxVisible + 2) {
      for (let i = 1; i <= totalPages; i++) {
        pushButton(i, i, i === currentPage);
      }
    } else {
      pushButton(1, 1, currentPage === 1);
      if (currentPage > 3) pushButton("...", null, false, true);

      const start = Math.max(2, currentPage - 1);
      const end = Math.min(totalPages - 1, currentPage + 1);
      for (let i = start; i <= end; i++) {
        pushButton(i, i, i === currentPage);
      }

      if (currentPage < totalPages - 2) pushButton("...", null, false, true);
      pushButton(totalPages, totalPages, currentPage === totalPages);
    }
  }

  function goToPage(page) {
    currentPage = page;
    renderNewsPage();
    window.scrollTo({ top: 0, behavior: "smooth" });
  }

  function renderNewsPage() {
    const start = (currentPage - 1) * itemsPerPage;
    const end = start + itemsPerPage;
    const pageData = newsData.slice(start, end);

    if (pageData.length === 0) {
      container.innerHTML = "<p class='text-center text-gray-500'>Kh√¥ng c√≥ tin t·ª©c n√†o.</p>";
      pagination.innerHTML = "";
      return;
    }

    let html = "";

    if (currentPage === 1) {
      const [latest, ...others] = pageData;
      html += `
        <a href="/newdetail?id=${latest.id}" class="block group mb-16 grid grid-cols-1 md:grid-cols-2 gap-8 items-center">
          <img src="${latest.imageSrc}" alt="${latest.imageAlt}" class="w-full h-80 object-cover rounded-xl shadow group-hover:scale-[1.01] transition-transform duration-200" />
          <div>
            <h2 class="text-3xl font-bold text-[var(--color-1)] mb-4 group-hover:text-[var(--color-3)] transition">${latest.title}</h2>
            <p class="text-gray-600 text-sm mb-1">üïí ${latest.formattedDate}</p>
            <p class="text-gray-700">${latest.description}</p>
            <span class="inline-block mt-4 text-[var(--color-3)] font-semibold group-hover:underline">ƒê·ªçc th√™m ‚Üí</span>
          </div>
        </a>
      `;
      html += renderNewsGrid(others);
    } else {
      html += renderNewsGrid(pageData);
    }

    container.innerHTML = html;
    renderPagination(Math.ceil(newsData.length / itemsPerPage));
  }

  function renderNewsGrid(newsArray) {
    return `
      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8">
        ${newsArray.map(item => `
          <a href="/newdetail?id=${item.id}" class="block group">
            <article class="bg-white border border-gray-200 rounded-xl overflow-hidden shadow-sm hover:shadow-md transition flex flex-col h-full">
              <img src="${item.imageSrc}" alt="${item.imageAlt}" class="h-48 w-full object-cover group-hover:scale-[1.01] transition-transform duration-200" />
              <div class="p-5 flex flex-col flex-grow">
                <h4 class="text-xl font-semibold mb-2 text-[var(--color-3)] group-hover:text-[var(--color-1)] transition">${item.title}</h4>
                <p class="text-gray-600 text-sm mb-2">üïí ${item.formattedDate}</p>
                <p class="text-gray-700 mb-4 flex-grow">${item.description.slice(0, 100)}...</p>
                <span class="text-[var(--color-3)] font-medium group-hover:underline mt-auto">ƒê·ªçc th√™m ‚Üí</span>
              </div>
            </article>
          </a>
        `).join("")}
      </div>
    `;
  }

  async function loadNews() {
    try {
      const res = await fetch("/api/news");
      const data = await res.json();

      newsData = (Array.isArray(data) ? data : []).sort((a, b) =>
        new Date(b.createdAt) - new Date(a.createdAt)
      ).map(item => ({
        ...item,
        imageSrc: item.imageSrc || getFirstImage(item.content),
        imageAlt: item.imageAlt || item.title,
        description: getFirstText(item.content),
        formattedDate: formatDate(item.createdAt),
      }));

      if (newsData.length === 0) {
        container.innerHTML = "<p class='text-center text-gray-500'>Kh√¥ng c√≥ tin t·ª©c n√†o.</p>";
        return;
      }

      renderNewsPage();
    } catch (err) {
      console.error("‚ùå L·ªói khi t·∫£i tin t·ª©c:", err);
      container.innerHTML = "<p class='text-red-500'>Kh√¥ng th·ªÉ t·∫£i tin t·ª©c.</p>";
    }
  }

  loadNews();
</script>

