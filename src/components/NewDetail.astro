<section class="bg-white text-[var(--color-3)] py-12">
  <div id="new-detail" class="max-w-7xl mx-auto px-4 flex flex-col gap-12 mt-[20%] md:mt-[5%]"></div>
</section>

<style>
/* Container chính */
.content-body {
  overflow-x: hidden;
  word-break: break-word;
  line-height: 1.6;
  text-align: justify;
}

/* Ảnh (mọi nguồn, kể cả inline style) */
.content-body img {
  width: 100% !important;
  max-width: 100% !important;
  height: auto !important;
  display: block !important;
  margin: 1rem auto !important;
  object-fit: contain;
}

/* Figure: ảnh và caption */
.content-body figure {
  width: 100% !important;
  max-width: 100% !important;
  margin: 1rem auto !important;
  display: block !important;
  text-align: center !important;
}

.content-body figure figcaption,
.content-body figcaption {
  width: 100% !important;
  max-width: 100% !important;
  font-size: 0.9rem !important;
  font-style: italic !important;
  color: #666 !important;
  text-align: center !important;
  margin-top: 0.5rem !important;
  padding: 0 1rem !important;
  line-height: 1.5 !important;
}

/* TABLE trong figure hoặc nội dung dán */
.content-body table {
  width: 100% !important;
  max-width: 100% !important;
  border-collapse: collapse !important;
  overflow-x: auto !important;
  display: block !important;
  margin: 1rem 0 !important;
}

/* CELL */
.content-body td,
.content-body th {
  width: auto !important;
  max-width: 100% !important;
  padding: 0.5rem !important;
  border: 1px solid #ddd !important;
  vertical-align: top !important;
  text-align: left !important;
  word-break: break-word !important;
}

.content-body th {
  background-color: #f3f4f6 !important;
  font-weight: 600 !important;
}

/* Responsive iframe/video */
.content-body iframe,
.content-body video {
  width: 100% !important;
  max-width: 100% !important;
  height: auto !important;
  display: block !important;
  margin: 1rem auto !important;
}

/* Responsive nếu nội dung chứa style width cứng */
.content-body [style*="width"],
.content-body [style*="max-width"] {
  width: 100% !important;
  max-width: 100% !important;
}

/* Đảm bảo caption hiển thị đẹp */
.content-body em {
  font-style: italic;
  color: #666;
}
</style>

<script>
const newDetail = document.getElementById('new-detail');
const urlParams = new URLSearchParams(window.location.search);
const id = parseInt(urlParams.get("id"));

function cleanHTML(html) {
  const wrapper = document.createElement("div");
  wrapper.innerHTML = html;

  // Cho phép các style sau
  const allowedStyles = [
    "text-align", "float", "margin-left", "margin-right", "display",
    "font-size", "font-style", "font-weight", "color", "background-color",
    "border", "box-shadow", "padding", "margin", "border-radius"
  ];

  wrapper.querySelectorAll('[style]').forEach(el => {
    const style = el.getAttribute('style');
    if (!style) return;

    const safeStyle = style
      .split(';')
      .map(s => s.trim())
      .filter(s => allowedStyles.some(allowed => s.startsWith(allowed)))
      .join('; ');

    if (safeStyle) {
      el.setAttribute('style', safeStyle);
    } else {
      el.removeAttribute('style');
    }
  });

  return wrapper.innerHTML;
}


async function fetchAndRenderNewsDetail() {
  try {
    const res = await fetch(`/api/news?id=${id}`);
    if (!res.ok) throw new Error("Lỗi khi gọi API");

    const data = await res.json();
    const newItem = data?.data || data;

    if (!newItem || !newItem.id) {
      newDetail!.innerHTML = `<p class="text-red-500">Không tìm thấy tin tức.</p>`;
      return;
    }

    const cleanedContent = cleanHTML(newItem.content);

    newDetail!.innerHTML = `
      <div class="w-full space-y-8">
        <h1 class="text-4xl font-extrabold text-justify md:text-center text-[var(--color-1)]">
          ${newItem.title}
        </h1>

        <div class="p-6 rounded-lg text-gray-700 leading-relaxed text-justify md:text-center">
          <div class="text-lg inline-block max-w-3xl w-full content-body text-justify">
            ${cleanedContent}
          </div>
        </div>
      </div>
    `;
  } catch (err) {
    console.error(err);
    newDetail!.innerHTML = `<p class="text-red-500">Lỗi khi tải dữ liệu.</p>`;
  }
}

fetchAndRenderNewsDetail();

</script>
