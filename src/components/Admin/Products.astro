---
---

<section class="min-h-screen bg-gradient-to-b from-gray-100 to-gray-200 py-16 px-4 sm:px-6 lg:px-8 pt-24">
  <div class="max-w-7xl mx-auto">
    <h1 class="text-3xl sm:text-4xl font-extrabold text-center text-gray-800 mb-8">Qu·∫£n L√Ω S·∫£n Ph·∫©m</h1>

    <!-- N√∫t th√™m s·∫£n ph·∫©m -->
    <div class="mb-6 flex justify-end">
      <a href="/admin/addproduct"
        class="bg-green-600 hover:bg-green-700 text-white font-semibold px-5 py-2.5 rounded-xl shadow-md transition text-sm sm:text-base">
        + Th√™m s·∫£n ph·∫©m
      </a>
    </div>

    <!-- B·ªô l·ªçc: t√¨m ki·∫øm + lo·∫°i -->
    <div class="flex flex-col lg:flex-row gap-4 mb-6 items-end">
      <!-- T√¨m ki·∫øm -->
      <div class="relative w-full lg:w-1/2">
        <label for="search-input" class="block text-sm font-medium text-gray-700 mb-1">
          üîç Nh·∫≠p t√™n s·∫£n ph·∫©m
        </label>
        <input
          id="search-input"
          type="text"
          placeholder="T√¨m theo t√™n s·∫£n ph·∫©m..."
          class="w-full pl-10 pr-4 py-2 text-sm border border-gray-300 rounded-xl shadow-sm focus:ring-2 focus:ring-blue-500 focus:outline-none"
        />
        <div class="absolute left-3 top-[2.35rem] text-gray-400 pointer-events-none">
          <i class="fas fa-search"></i>
        </div>
      </div>

      <!-- L·ªçc theo lo·∫°i -->
      <div class="w-full lg:w-1/3">
        <label for="tag-filter" class="block text-sm font-medium text-gray-700 mb-1">
          L·ªçc theo lo·∫°i
        </label>
        <select
          id="tag-filter"
          class="w-full px-4 py-2 text-sm border border-gray-300 rounded-xl shadow-sm focus:ring-2 focus:ring-blue-500 focus:outline-none"
        >
          <option value="">-- T·∫•t c·∫£ lo·∫°i --</option>
        </select>
      </div>
    </div>

    <!-- B·∫£ng s·∫£n ph·∫©m -->
    <div class="overflow-x-auto bg-white shadow-xl rounded-2xl">
      <table class="w-full min-w-[768px] text-sm table-fixed border-collapse">
        <thead class="bg-gray-100 text-gray-700 uppercase text-xs font-semibold">
          <tr class="border-b border-gray-300">
            <th class="w-[5%] px-4 py-3 text-center">ID</th>
            <th class="w-[15%] px-4 py-3 text-center">·∫¢nh</th>
            <th class="w-[35%] px-4 py-3 text-left">T√™n s·∫£n ph·∫©m</th>
            <th class="w-[25%] px-4 py-3 text-left">Lo·∫°i</th>
            <th class="w-[20%] px-4 py-3 text-center">H√†nh ƒë·ªông</th>
          </tr>
        </thead>

        <tbody id="product-table-body">
          <!-- JS render -->
        </tbody>
      </table>
      <div id="pagination" class="flex justify-center gap-2 mt-6 flex-wrap p-4"></div>
    </div>
  </div>
</section>



<script>
  import products from "../../data/products.json";
  import { initPagination } from "../../utils/pagination.js";

  const tbody = document.getElementById("product-table-body");
  const pagination = document.getElementById("pagination");

  function renderProducts(productArray){
  if (productArray.length === 0) {
    tbody!.innerHTML = `
      <tr class="border-b border-gray-300">
        <td colspan="5" class="text-center py-6 text-gray-500">Kh√¥ng c√≥ s·∫£n ph·∫©m n√†o.</td>
      </tr>
    `;
  } else {
    tbody!.innerHTML = productArray.map((product, index) => `
      <tr class="hover:bg-gray-50 transition duration-200 border-b border-gray-300">
        <td class="px-4 py-3 text-center">${product.id}</td>

        <td class="px-4 py-3 flex justify-center">
          <img
            src="${product.image || "/images/placeholder.png"}"
            alt="${product.name}"
            class="w-16 h-16 object-contain rounded border-2 border-gray-600 bg-white p-1"
          />
        </td>

        <td class="px-4 py-3 font-semibold text-gray-900">${product.name}</td>

        <td class="px-4 py-3 text-gray-600">${product.tags?.join(", ") || "-"}</td>

        <td class="px-4 py-3 text-center space-x-3">
          <div class="flex flex-wrap justify-center gap-2 sm:gap-3">
            <a href="/admin/productdetail?id=${product.id}" class="text-blue-600 hover:text-blue-800 font-medium transition">Xem</a>
            <a href="/admin/editproduct?id=${product.id}" class="text-yellow-500 hover:text-yellow-700 font-medium transition">S·ª≠a</a>
            <button id="delete-btn-${product.id}" class="cursor-pointer text-red-600 hover:text-red-800 font-medium transition">X√≥a</button>
          </div>
        </td>
      </tr>
    `).join("");
    // G·∫Øn s·ª± ki·ªán x√≥a cho t·∫•t c·∫£ n√∫t
  document.querySelectorAll("button[id^='delete-btn-']").forEach(button => {
    button.addEventListener("click", async () => {
      const id = parseInt(button.id.replace("delete-btn-", ""));
      if (!confirm("B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a s·∫£n ph·∫©m n√†y?")) return;

      try {
        const res = await fetch("/api/delete-product", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ id }), 
        });

        if (!res.ok) {
          const text = await res.text();
          alert("L·ªói server: " + text);
          return;
        }

        const result = await res.json();
        alert("ƒê√£ x√≥a s·∫£n ph·∫©m.");
        window.location.reload(); // reload l·∫°i danh s√°ch s·∫£n ph·∫©m
      } catch (error) {
        alert("L·ªói k·∫øt n·ªëi m√°y ch·ªß.");
        console.error(error);
      }
    });
  });
  }
  }

const searchInput = document.getElementById("search-input");
const tagFilter = document.getElementById("tag-filter");
let filteredProducts = [...products]; // m·∫∑c ƒë·ªãnh

function applyFilterAndSearch() {
  const keyword = searchInput?.value.trim().toLowerCase();
  const selectedTag = tagFilter?.value;

  filteredProducts = products.filter((p) => {
    const matchSearch =
      p.name.toLowerCase().includes(keyword);
    const matchTag = selectedTag === "" || (p.tags && p.tags.includes(selectedTag));
    return matchSearch && matchTag;
    
  });

  paginationInstance.render(filteredProducts);

}
const uniqueTags = Array.from(new Set(products.flatMap(p => p.tags || [])));
  uniqueTags.forEach(tag => {
    const option = document.createElement("option");
    option.value = tag;
    option.textContent = tag;
    tagFilter?.appendChild(option);
  });

    // L·∫Øng nghe s·ª± ki·ªán thay ƒë·ªïi
    searchInput?.addEventListener("input", applyFilterAndSearch);
    tagFilter?.addEventListener("change", applyFilterAndSearch);


  const paginationInstance = initPagination({
    data: products,
    itemsPerPage: 12,
    onRenderPage: renderProducts,
    paginationContainer: pagination,
  });
   paginationInstance.render(filteredProducts)
</script>
