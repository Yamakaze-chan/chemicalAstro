<section class="min-h-screen bg-gray-50 py-16 px-6 pt-24">
  <div id="editproduct" class="max-w-7xl mx-auto px-4 flex flex-col lg:flex-row gap-12 mt-[5%]">

  </div>
</section>


<script type="module">
const productEdit = document.getElementById('editproduct');
const urlParams = new URLSearchParams(window.location.search);
const id = parseInt(urlParams.get("id"));

const response = await fetch("/api/products.json");
const products = await response.json();

const product = products.find(p => p.id === id);

if (!product) {
  productEdit.innerHTML = `<p class="text-red-500">Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m.</p>`;
} else {
  const specificationsHTML = product.specifications?.map((spec, index) => `
    <tr class="spec-row">
      <td class="border px-4 py-2">
        <input type="text" name="spec_name_${index}" value="${spec.name}" class="w-full p-2 rounded" />
      </td>
      <td class="border px-4 py-2">
        <input type="text" name="spec_food_${index}" value="${spec.food}" class="w-full p-2 rounded" />
      </td>
      <td class="border px-4 py-2">
        <input type="text" name="spec_tech_${index}" value="${spec.tech}" class="w-full p-2 rounded" />
      </td>
      <td class="border px-4 py-2 text-center">
        <button type="button" class="text-red-600 font-bold remove-spec">‚úñ</button>
      </td>
    </tr>
  `).join("") || "";

  productEdit.innerHTML = `
    <div class="max-w-5xl mx-auto bg-white p-8 rounded-xl shadow-xl">
      <h1 class="text-3xl font-bold text-gray-800 mb-6">‚úèÔ∏è S·ª≠a S·∫£n Ph·∫©m</h1>
      <form id="edit-form" class="space-y-8">
        <input type="hidden" name="id" value="${id}" />
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div><label class="block font-semibold text-gray-700 mb-1">T√™n s·∫£n ph·∫©m</label>
            <input type="text" name="name" value="${product.name}" class="w-full border px-4 py-2 rounded-lg" required />
          </div>
          <div><label class="block font-semibold text-gray-700 mb-1">C√¥ng th·ª©c</label>
            <input type="text" name="formula" value="${product.formula}" class="w-full border px-4 py-2 rounded-lg" />
          </div>
          <div><label class="block font-semibold text-gray-700 mb-1">M√£ CAS</label>
            <input type="text" name="cas" value="${product.cas}" class="w-full border px-4 py-2 rounded-lg" />
          </div>
          <div><label class="block font-semibold text-gray-700 mb-1">M√£ HS</label>
            <input type="text" name="hsCode" value="${product.hsCode}" class="w-full border px-4 py-2 rounded-lg" />
          </div>
          <div><label class="block font-semibold text-gray-700 mb-1">EINECS</label>
            <input type="text" name="einecs" value="${product.einecs}" class="w-full border px-4 py-2 rounded-lg" />
          </div>
          <div><label class="block font-semibold text-gray-700 mb-1">Kh·ªëi l∆∞·ª£ng mol</label>
            <input type="text" name="molarMass" value="${product.molarMass}" class="w-full border px-4 py-2 rounded-lg" />
          </div>
          <div class="md:col-span-2">
            <label class="block font-semibold text-gray-700 mb-1">Tags (ph√¢n c√°ch b·∫±ng d·∫•u ph·∫©y)</label>
            <input type="text" name="tags" value="${product.tags?.join(', ') || ''}" class="w-full border px-4 py-2 rounded-lg" />
          </div>
        </div>

        <div>
          <label class="block font-semibold text-gray-700 mb-1">M√¥ t·∫£ (appearance)</label>
          <textarea name="appearance" rows="5" class="w-full border px-4 py-2 rounded-lg">${product.appearance}</textarea>
        </div>

        <div>
          <label class="block font-semibold text-gray-700 mb-1">B·∫£o qu·∫£n (storage)</label>
          <textarea name="storage" rows="3" class="w-full border px-4 py-2 rounded-lg">${product.storage}</textarea>
        </div>

        <div>
          <label class="block font-semibold text-gray-700 mb-1">Link ·∫£nh</label>
          <input type="text" name="image" value="${product.image}" class="w-full border px-4 py-2 rounded-lg" />
        </div>

        <div>
          <h2 class="text-xl font-bold text-gray-800 mt-10 mb-4">üîç Ch·ªâ ti√™u k·ªπ thu·∫≠t</h2>
          <div class="overflow-x-auto">
            <table class="min-w-full border border-gray-300 text-sm text-left">
              <thead class="bg-gray-100 text-gray-700 font-semibold">
                <tr>
                  <th class="border px-4 py-2">T√™n ch·ªâ ti√™u</th>
                  <th class="border px-4 py-2">Th·ª±c ph·∫©m</th>
                  <th class="border px-4 py-2">C√¥ng nghi·ªáp</th>
                  <th class="border px-4 py-2 text-center">X√≥a</th>
                </tr>
              </thead>
              <tbody id="spec-list">${specificationsHTML}</tbody>
            </table>
            <input type="hidden" id="spec-count" name="spec_count" value="${product.specifications?.length || 0}" />
          </div>
          <button type="button" id="add-spec-row" class="mt-3 bg-gray-200 px-4 py-1 rounded hover:bg-gray-300">
            ‚ûï Th√™m d√≤ng ch·ªâ ti√™u
          </button>
        </div>

        <div class="flex justify-between items-center mt-10">
          <a href="/admin/products" class="text-gray-600 hover:text-gray-800">‚Üê Quay l·∫°i</a>
          <button type="submit" class="bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg font-semibold">
            üíæ L∆∞u thay ƒë·ªïi
          </button>
        </div>
      </form>
    </div>
  `;
}

// X·ª≠ l√Ω submit form
document.getElementById("edit-form")?.addEventListener("submit", async function (e) {
  e.preventDefault();
  const form = e.target;
  const formData = new FormData(form);

  try {
    const res = await fetch("/api/update-product", {
      method: "POST",
      body: formData,
    });
    const result = await res.json();

    if (result.success) {
      alert("‚úÖ C·∫≠p nh·∫≠t th√†nh c√¥ng!");
    } else {
      alert("‚ùå L·ªói: " + (result.message || "Kh√¥ng r√µ l·ªói"));
    }
  } catch (err) {
    alert("‚ùå G·ª≠i d·ªØ li·ªáu th·∫•t b·∫°i!");
  }
});

// H√†m c·∫≠p nh·∫≠t l·∫°i t√™n ch·ªâ ti√™u sau khi th√™m/x√≥a
function reindexSpecInputs() {
  const rows = document.querySelectorAll(".spec-row");
  rows.forEach((row, index) => {
    row.querySelector('input[name^="spec_name_"]').name = `spec_name_${index}`;
    row.querySelector('input[name^="spec_food_"]').name = `spec_food_${index}`;
    row.querySelector('input[name^="spec_tech_"]').name = `spec_tech_${index}`;
  });
  document.getElementById("spec-count").value = rows.length;
}

// X·ª≠ l√Ω x√≥a d√≤ng ch·ªâ ti√™u
document.addEventListener("click", function (e) {
  if (e.target.classList.contains("remove-spec")) {
    e.target.closest("tr")?.remove();
    reindexSpecInputs();
  }
});

// X·ª≠ l√Ω th√™m d√≤ng ch·ªâ ti√™u
const specList = document.getElementById("spec-list");
const addSpecBtn = document.getElementById("add-spec-row");
const specCountInput = document.getElementById("spec-count");

if (specList && addSpecBtn && specCountInput) {
  addSpecBtn.addEventListener("click", () => {
    const row = document.createElement("tr");
    row.className = "spec-row";
    row.innerHTML = `
      <td class="border px-4 py-2">
        <input type="text" name="spec_name_temp" placeholder="VD: H√†m l∆∞·ª£ng" class="p-2 rounded w-full" />
      </td>
      <td class="border px-4 py-2">
        <input type="text" name="spec_food_temp" placeholder="VD: 94%" class="p-2 rounded w-full" />
      </td>
      <td class="border px-4 py-2">
        <input type="text" name="spec_tech_temp" placeholder="VD: 94%" class="p-2 rounded w-full" />
      </td>
      <td class="border px-4 py-2 text-center">
        <button type="button" class="text-red-600 font-bold remove-spec">‚úñ</button>
      </td>
    `;
    specList.appendChild(row);
    reindexSpecInputs();
  });
}
</script>



