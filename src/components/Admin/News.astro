---
---

<section class="min-h-screen bg-gradient-to-b from-gray-100 to-gray-200 py-16 px-4 pt-24">
  <div class="max-w-7xl mx-auto">
    <h1 class="text-3xl sm:text-4xl font-extrabold text-center text-[var(--color-3)] mb-12">Qu·∫£n L√Ω Tin T·ª©c</h1>

    <div class="mt-6 mb-6 flex justify-end">
      <a href="/admin/addnew"
         class="bg-[var(--color-4)] hover:bg-[var(--color-1)] text-white font-semibold px-6 py-3 rounded-xl shadow-md transition">
        + Th√™m tin t·ª©c
      </a>
    </div>

    <!-- √î t√¨m ki·∫øm -->
    <div class="relative w-full sm:w-1/2 mb-6 mx-auto">
      <label for="search-input" class="block text-sm font-medium text-[var(--color-3)] mb-2">
        üîç Nh·∫≠p ti√™u ƒë·ªÅ tin t·ª©c
      </label>
      <input
        id="search-input"
        type="text"
        placeholder="T√¨m theo ti√™u ƒë·ªÅ..."
        class="w-full pl-10 pr-4 py-2 text-sm border border-gray-300 rounded-xl shadow-lg bg-white focus:ring-2 focus:ring-blue-500 focus:outline-none"
      />
      <div class="absolute left-3 top-[2.4rem] text-gray-400 pointer-events-none">
        <i class="fas fa-search"></i>
      </div>
    </div>

    <!-- Khung t·ªïng chia 2 ph·∫ßn: b·∫£ng (cu·ªôn ƒë∆∞·ª£c) v√† pagination (c·ªë ƒë·ªãnh ƒë√°y) -->
<div class="flex flex-col h-[496px] bg-white shadow-xl">
  <!-- Ph·∫ßn b·∫£ng: chi·∫øm ph·∫ßn c√≤n l·∫°i, c√≥ th·ªÉ cu·ªôn -->
  <div class="flex-1 overflow-auto">
    <table class="min-w-full text-sm border-collapse">
      <thead class="bg-[var(--color-4)] text-white uppercase text-xs font-semibold">
        <tr class="border-b border-gray-300">
          <th class="px-4 py-3 text-center whitespace-nowrap">ID</th>
          <th class="px-4 py-3 text-left whitespace-nowrap">Ti√™u ƒë·ªÅ</th>
          <th class="px-4 py-3 text-left whitespace-nowrap">M√¥ t·∫£</th>
          <th class="px-4 py-3 text-center whitespace-nowrap">H√†nh ƒë·ªông</th>
        </tr>
      </thead>
      <tbody id="news-table-body">
        <!-- JS render -->
      </tbody>
    </table>
  </div>

  <!-- Ph·∫ßn ph√¢n trang c·ªë ƒë·ªãnh d∆∞·ªõi c√πng -->
  <div id="pagination" class="flex justify-center gap-2 mt-6 flex-wrap p-4 border-gray-200">
    <!-- N√∫t ph√¢n trang -->
  </div>
</div>

  </div>
</section>

<script>
  import news from "../../data/news.json";
  import { initPagination } from "../../utils/pagination.js";

  const tbody = document.getElementById("news-table-body");
  const pagination = document.getElementById("pagination");

  function stripHtml(html: string) {
    return html.replace(/<[^>]*>/g, '').replace(/\s+/g, ' ').trim();
  }
    
  function renderNews(newsArray) {
    if (newsArray.length === 0) {
      tbody!.innerHTML = `
        <tr class="border-b border-gray-300">
          <td colspan="4" class="text-center py-6 text-gray-500">Kh√¥ng c√≥ tin t·ª©c n√†o.</td>
        </tr>
      `;
    } else {
      tbody!.innerHTML = newsArray.map(item => `
        <tr class="hover:bg-gray-50 transition duration-200 border-b border-gray-300" data-id="${item.id}">
          <td class="px-4 py-3 text-center whitespace-nowrap">${item.id}</td>
          <td class="px-4 py-3 font-semibold text-gray-900 whitespace-nowrap overflow-hidden overflow-ellipsis max-w-[200px]" title="${item.title}">${item.title}</td>
          <td class="px-4 py-3 text-gray-600 whitespace-nowrap overflow-hidden overflow-ellipsis max-w-[250px]">
            ${item.content ? stripHtml(item.content).slice(0, 60) + "..." : "-"}
          </td>
          <td class="px-4 py-3 text-center space-x-3 whitespace-nowrap">
            <a href="/admin/newdetail?id=${item.id}" class="text-blue-600 hover:text-blue-800 font-medium transition">Xem</a>
            <a href="/admin/editnew?id=${item.id}" class="text-yellow-500 hover:text-yellow-700 font-medium transition">S·ª≠a</a>
            <button id="delete-btn-${item.id}" class="cursor-pointer text-red-600 hover:text-red-800 font-medium transition" data-id="${item.id}">X√≥a</button>
          </td>
        </tr>
      `).join("");

      document.querySelectorAll('button[id^="delete-btn-"]').forEach(button => {
        button.addEventListener('click', async () => {
          const id = parseInt(button.id.replace("delete-btn-", ""));
          if (!confirm("B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a kh√¥ng?")) return;
          try {
            const response = await fetch("/api/delete-news", {
              method: "POST",
              headers: { "Content-type": "application/json" },
              body: JSON.stringify({ id }),
            });
            if (!response.ok) {
              const text = await response.text();
              alert("L·ªói server");
              return;
            }
            const result = await response.json();
            alert("ƒê√£ x√≥a tin t·ª©c");
            window.location.reload();
          } catch (error) {
            alert("L·ªói k·∫øt n·ªëi");
            console.error(error);
          }
        });
      });
    }
  }

  const searchInput = document.getElementById("search-input");
  let filteredNews = [...news];

  function newsSearch() {
    const keyword = (searchInput as HTMLInputElement)?.value.trim().toLowerCase();
    filteredNews = news.filter(n => n.title.toLowerCase().includes(keyword));
    paginationInstance.render(filteredNews);
  }

  searchInput?.addEventListener("input", newsSearch);

  
  const paginationInstance = initPagination({
    data: news,
    itemsPerPage: 8,
    onRenderPage: renderNews,
    paginationContainer: pagination,
  });

  paginationInstance.render(filteredNews);
</script>