---
---

<section class="min-h-screen bg-white py-12 text-[var(--color-3)]">
  <div class="max-w-7xl mx-auto px-4 shadow-2xl pb-12 rounded-xl">
    <h1 id="product-heading" class="text-3xl mt-[5%] font-bold text-center mb-10 mt-[20%] md:mt-[5%]">T·∫§T C·∫¢ S·∫¢N PH·∫®M THU·ªòC</h1>
        <div class="mb-6 text-center flex flex-col md:flex-row items-center justify-center gap-3">
          <label for="search-input" class="text-lg font-medium text-[var(--color-3)]">Nh·∫≠p t√™n:</label>
          <input 
            id="search-input"
            type="text"
            placeholder="T√¨m ki·∫øm s·∫£n ph·∫©m..."
            class="w-full md:w-1/2 border border-gray-300 rounded-md px-4 py-2 focus:outline-none focus:ring-2 focus:ring-[var(--color-1)]"
          />
        </div>

    <div id="product-type" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-8 mb-12">
    </div>
    <div id="pagination" class="flex justify-center gap-2 flex-wrap"></div>

  </div>

  </div>
</section>
<script>
  import { initPagination } from "../utils/pagination.js";

  const productType = document.getElementById('product-type');
  const pagination = document.getElementById("pagination");
  const heading = document.getElementById("product-heading");

  const urlParams = new URLSearchParams(window.location.search);
  const tagFromURL = urlParams.get("type");

  if (tagFromURL) {
    heading!.innerHTML = `T·∫§T C·∫¢ S·∫¢N PH·∫®M THU·ªòC <span class="text-[var(--color-1)]">${tagFromURL}</span>`;
  } else {
    heading!.innerHTML = `T·∫§T C·∫¢ S·∫¢N PH·∫®M`;
  }

  function renderProducts(productArray) {
    if (productArray.length === 0) {
      productType!.innerHTML = `<p class="text-red-500">Hi·ªán ch∆∞a c√≥ s·∫£n ph·∫©m!</p>`;
      pagination!.innerHTML = "";
      return;
    }

    productType!.innerHTML = productArray.map(product => `
      <div class="bg-white rounded-xl border border-gray-200 p-4 hover:shadow-lg transition duration-300">
        <a href="/productdetail?id=${product.id}">
          <img src="${product.image}" alt="${product.name}"
            class="w-full h-64 object-contain rounded-md mb-4 hover:scale-105 transition duration-300 bg-white" />
        </a>
        <h2 class="text-xl font-semibold mb-2">${product.name}</h2>
        <a href="/productdetail?id=${product.id}" 
          class="inline-block bg-[var(--color-3)] text-white py-2 px-4 rounded-md hover:bg-opacity-90 transition">
          Xem chi ti·∫øt
        </a>
      </div>
    `).join('');
  }

  async function loadAndRender() {
  try {
    const res = await fetch("/api/products");
    let products = await res.json();

    // üëâ S·∫Øp x·∫øp s·∫£n ph·∫©m theo id gi·∫£m d·∫ßn (m·ªõi nh·∫•t tr∆∞·ªõc)
    products = products.sort((a, b) => b.id - a.id); 

    filteredProducts = tagFromURL
      ? products.filter(p => p.tags?.includes(tagFromURL))
      : products;

    paginationInstance = initPagination({
      data: filteredProducts,
      itemsPerPage: 12,
      onRenderPage: renderProducts,
      paginationContainer: pagination,
    });

    paginationInstance.render(filteredProducts);
  } catch (err) {
    console.error("L·ªói khi g·ªçi API:", err);
    productType!.innerHTML = `<p class="text-red-500">L·ªói khi t·∫£i s·∫£n ph·∫©m t·ª´ server.</p>`;
  }
}

const searchInput = document.getElementById("search-input");

let filteredProducts = []; 
let paginationInstance = null; 

searchInput.addEventListener("input", () => {
  const query = searchInput.value.trim().toLowerCase();

  const result = filteredProducts.filter(product =>
    product.name.toLowerCase().includes(query)
  );

  paginationInstance.render(result);
});

  loadAndRender();
</script>

