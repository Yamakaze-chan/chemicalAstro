---
---

<section class="min-h-screen bg-white py-12 text-[var(--color-3)]">
  <div class="max-w-7xl mx-auto px-4 shadow-2xl pb-12 rounded-xl">
    <h1 class="text-4xl text-center text-[var(--color-1)] font-bold font-inter mt-[20%] md:mt-[5%] mb-16">TẤT CẢ SẢN PHẨM</h1>

    <div class="flex flex-col md:flex-row gap-8">
      <!-- Sidebar Menu -->
      <aside id="filters" class="w-full max-h-max md:w-1/4 bg-white p-6 rounded-xl shadow-2xl ">
        <h2 class="text-xl font-semibold mb-4">Danh mục</h2>

        <ul id="tag-checkbox-list" class="space-y-3"></ul>


        
      </aside>

      <div class="w-full md:w-3/4">
        <div id="product-list" class="grid grid-cols-2 md:grid-cols-2 lg:grid-cols-3 gap-8"></div>
        <div id="pagination" class="flex justify-center mt-8 gap-2 flex-wrap"></div>
      </div>
    </div>
        
  </div>
</section>

<script>
  import { initPagination } from "../utils/pagination.js";

  const productList = document.getElementById('product-list');
  const tagList = document.getElementById("tag-checkbox-list");
  const pagination = document.getElementById('pagination');

  let products = [];
  let filteredProducts = [];

  // Lấy dữ liệu sản phẩm và tag từ API
  async function fetchProducts() {
    try {
      const res = await fetch('/api/products');
      const data = await res.json();
      products = data;
      products = data.sort((a, b) => b.id - a.id); // Mới nhất trước
      filteredProducts = [...products];
      renderTagCheckboxes(); // sau khi có data thì render checkbox
      renderFilteredAndPaginate([]); // mặc định: tất cả sản phẩm
    } catch (err) {
      console.error('Lỗi khi tải sản phẩm:', err);
    }
  }

  // Lấy tất cả tag duy nhất từ danh sách sản phẩm
  function getAllTags() {
    return Array.from(new Set(products.flatMap(p => p.tags || [])));
  }

  const renderTagCheckboxes = () => {
    const allTags = getAllTags();
    tagList!.innerHTML = `
      <li>
        <input type="checkbox" value="all" class="filter-checkbox all-checkbox" checked>
        Tất cả sản phẩm
      </li>
    `;

    allTags.forEach(tag => {
      tagList!.innerHTML += `
        <li>
          <input type="checkbox" value="${tag}" class="filter-checkbox">
          ${tag}
        </li>
      `;
    });

    setupFilterEvents();
  };

  function renderProducts(productArray) {
    let html = "";
    productArray.forEach(product => {
      html += `
        <div class="bg-white rounded-xl border border-gray-200 p-4 hover:shadow-lg transition duration-300 flex flex-col items-center justify-between h-full">
          <a href="/productdetail?id=${product.id}">
            <img src="${product.image}" alt="${product.name}"
              class="w-full h-64 object-contain rounded-md mb-4 hover:scale-105 transition duration-300 bg-white" />
          </a>
          <h2 class="text-xl font-semibold mb-2 text-center">${product.name}</h2>
          <a href="/productdetail?id=${product.id}" 
            class="w-fit mx-auto bg-[var(--color-3)] text-white py-2 px-4 rounded-md hover:bg-opacity-90 transition mt-4">
            Xem chi tiết
          </a>
        </div>
      `;
    });

    productList!.innerHTML = html;
  }

  const setupFilterEvents = () => {
    const allCheckbox = document.querySelector('.all-checkbox');
    const otherCheckboxes = document.querySelectorAll('.filter-checkbox:not(.all-checkbox)');

    allCheckbox!.addEventListener('change', () => {
      if (allCheckbox!.checked) {
        otherCheckboxes.forEach(cb => cb.checked = false);
        renderFilteredAndPaginate([]);
      }
    });

    otherCheckboxes.forEach(cb => {
      cb.addEventListener('change', () => {
        if (cb.checked) {
          allCheckbox!.checked = false;
        }

        const selectedTags = Array.from(otherCheckboxes)
          .filter(cb => cb.checked)
          .map(cb => cb.value);

        if (selectedTags.length === 0) {
          allCheckbox!.checked = true;
          renderFilteredAndPaginate([]);
          return;
        }

        renderFilteredAndPaginate(selectedTags);
      });
    });
  };

  const paginationInstance = initPagination({
    data: filteredProducts,
    itemsPerPage: 3, // bạn có thể đổi số lượng sản phẩm mỗi trang
    onRenderPage: renderProducts,
    paginationContainer: pagination,
  });

  function renderFilteredAndPaginate(selectedTags) {
    if (selectedTags.length === 0) {
      filteredProducts = [...products];
    } else {
      filteredProducts = products.filter(product =>
        product.tags?.some(tag => selectedTags.includes(tag))
      );
    }
    paginationInstance.render(filteredProducts);
  }

  fetchProducts();
</script>

