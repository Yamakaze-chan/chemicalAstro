---
import "../styles/global.css";
---
<!-- bg-gradient-to-b from-[var(--color-4)] to-[var(--color-3)] -->
   <section class="bg-[linear-gradient(to_bottom,_var(--color-4)_0%,_var(--color-1)_40%,_var(--color-1)_60%,_var(--color-4)_100%)] py-8 bg-cover bg-center bg-no-repeat">
  <div class="flex justify-center items-center py-8">
    
  </div>

  <div class="mx-auto w-full px-4 sm:px-6 lg:px-8">
    <div class="flex flex-col md:flex-row items-center justify-evenly gap-6">
      <!-- Cột trái - Thông tin liên hệ -->
      <div class="lg:col-span-2 flex flex-col space-y-6">
        
        <h1 class="font-manrope text-white text-4xl lg:text-6xl font-bold leading-10">
          Liên hệ
        </h1>

        <div class="text-[var(--color-2)] mt-4 mb-4 space-y-4 text-xl">
          <div class="flex items-center space-x-2">
            <img src="https://www.tmasolutions.vn//images/icons/LienHe/phong-kinh-doanh.webp" class="h-10 w-10" />
            <span>0388 165 009</span>
          </div>
          <div class="flex items-center space-x-2">
            <img src="https://www.tmasolutions.vn//images/icons/LienHe/yeu-cau-chung.webp" class="h-10 w-10" />
            <span>contact@company.com</span>
          </div>
          <div class="flex items-center space-x-2">
            <img src="https://www.tmasolutions.vn//images/icons/LienHe/toa-nha-tma.webp" class="h-10 w-10" />
            <p class="flex flex-col">
              <span>113 Nguyễn Cửu Vân, Phường 17, Quận Bình Thạnh,</span>
              <span>TP.Hồ Chí Minh</span>
            </p>
          </div>

          <!-- Google Map -->
          <div class="w-full rounded-xl overflow-hidden shadow-lg">
            <iframe
              src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3919.215448714314!2d106.70421477408773!3d10.794804258856395!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x317528b15b6af95b%3A0x34b33f3ff9d034d3!2zMzUvMTEzIMSQLiBOZ3V54buFbiBD4butdSBWw6JuLCBQaMaw4budbmcgMTcsIELDrG5oIFRo4bqhbmgsIEjhu5MgQ2jDrSBNaW5oLCBWaeG7h3QgTmFt!5e0!3m2!1svi!2s!4v1750665990167!5m2!1svi!2s"
              width="100%" height="240" style="border:0;" allowfullscreen="" loading="lazy"
              referrerpolicy="no-referrer-when-downgrade">
            </iframe>
          </div>
        </div>
      </div>

      <!-- Cột phải - Form -->
       <form id="contact-form"> 
      <div class="lg:col-span-3 bg-gray-50 py-5 px-6 rounded-2xl w-full max-w-3xl mx-auto">
         <div class="max-w-2xl mx-auto w-full">

          <h2 class="text-[var(--color-3)] font-manrope text-3xl font-semibold leading-10 mb-11">
            Gửi tin nhắn cho chúng tôi
          </h2>

          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <!-- Name -->
            <div class="relative">
              <input type="text" id="name" name="nameCustomer" placeholder=" "
                oninput="this.setAttribute('data-has-content', this.value ? 'true' : '')"
                class="peer w-full h-12 text-[var(--color-3)] placeholder-transparent shadow-sm bg-transparent text-lg font-normal leading-7 rounded-full border border-gray-200 focus:outline-none pl-4 pt-2" />
              <label for="name"
                class="absolute left-4 top-2 text-[var(--color-3)] text-base transition-all duration-200 peer-placeholder-shown:top-3 peer-placeholder-shown:text-lg peer-focus:top-0 peer-focus:text-sm peer-focus:text-[var(--color-3)]">
                Họ và Tên
              </label>
            </div>

            <!-- Email -->
            <div class="relative">
              <input type="text" id="email" name="email" placeholder=" "
                oninput="this.setAttribute('data-has-content', this.value ? 'true' : '')"
                class="peer w-full h-12 text-[var(--color-3)] placeholder-transparent shadow-sm bg-transparent text-lg font-normal leading-7 rounded-full border border-gray-200 focus:outline-none pl-4 pt-2" />
              <label for="Email"
                class="absolute left-4 top-2 text-[var(--color-3)] text-base transition-all duration-200 peer-placeholder-shown:top-3 peer-placeholder-shown:text-lg peer-focus:top-0 peer-focus:text-sm peer-focus:text-[var(--color-3)]">
                Email
              </label>
            </div>

            <!-- Phone -->
            <div class="relative">
              <input type="tel" id="phone" name="phone" placeholder=" "
                oninput="this.setAttribute('data-has-content', this.value ? 'true' : '')"
                class="peer w-full h-12 text-[var(--color-3)] placeholder-transparent shadow-sm bg-transparent text-lg font-normal leading-7 rounded-full border border-gray-200 focus:outline-none pl-4 pt-2" />
              <label for="phone"
                class="absolute left-4 top-2 text-[var(--color-3)] text-base transition-all duration-200 peer-placeholder-shown:top-3 peer-placeholder-shown:text-lg peer-focus:top-0 peer-focus:text-sm peer-focus:text-[var(--color-3)]">
                Số điện thoại
              </label>
            </div>
<!-- Bạn là -->
<div class="relative" x-data="{
  open: false,
  selectedValue: '',
  selectedLabel: '',
  options: [
    { value: 'retail', label: 'Cá nhân' },
    { value: 'service', label: 'Doanh nghiệp' },
    { value: 'other', label: 'Khác' }
  ],
  select(value, label) {
    this.selectedValue = value;
    this.selectedLabel = label;
    this.open = false;
  }
}" @click.away="open = false">
  <!-- Button -->
  <button type="button" @click="open = !open"
    class="peer w-full h-12 bg-transparent text-left text-lg font-normal leading-7 rounded-full border border-gray-200 pl-4 pr-10 shadow-sm flex items-center justify-between focus:outline-none text-[var(--color-3)]">
    <span x-text="selectedLabel || 'Bạn là'" class="block truncate min-h-[1.75rem] flex-1"></span>
    <svg fill="currentColor" viewBox="0 0 20 20" :class="{ 'rotate-180': open }"
      class="w-4 h-4 ml-2 transition-transform duration-200 transform shrink-0">
      <path fill-rule="evenodd"
        d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
        clip-rule="evenodd" />
    </svg>
  </button>

  <!-- Dropdown -->
  <ul x-show="open"
    x-transition:enter="transition ease-out duration-200"
    x-transition:enter-start="opacity-0 translate-y-1"
    x-transition:enter-end="opacity-100 translate-y-0"
    x-transition:leave="transition ease-in duration-150"
    x-transition:leave-start="opacity-100 translate-y-0"
    x-transition:leave-end="opacity-0 translate-y-1"
    class="absolute z-10 w-full mt-2 bg-white border border-gray-200 rounded-md shadow-lg">
    <template x-for="opt in options" :key="opt.value">
      <li>
        <a href="#" @click.prevent="select(opt.value, opt.label)"
          class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-[var(--color-3)] transition">
          <span x-text="opt.label"></span>
        </a>
      </li>
    </template>
  </ul>

  <input type="hidden" name="businessType" x-model="selectedValue">
</div>


            <!-- Loại hình kinh doanh -->
<div class="relative" x-data="{
  open: false,
  selectedValue: '',
  selectedLabel: '',
  options: [
    { value: 'retail', label: 'Bán lẻ' },
    { value: 'service', label: 'Dịch vụ' },
    { value: 'manufacturing', label: 'Sản xuất' },
    { value: 'other', label: 'Khác' }
  ],
  select(value, label) {
    this.selectedValue = value;
    this.selectedLabel = label;
    this.open = false;
  }
}" @click.away="open = false">
  <!-- Button -->
  <button type="button" @click="open = !open"
    class="peer w-full h-12 bg-transparent text-left text-lg font-normal leading-7 rounded-full border border-gray-200 pl-4 pr-10 shadow-sm flex items-center justify-between focus:outline-none text-[var(--color-3)]">
    <span x-text="selectedLabel || 'Kiểu kinh doanh'" class="block truncate min-h-[1.75rem] flex-1"></span>
    <svg fill="currentColor" viewBox="0 0 20 20" :class="{ 'rotate-180': open }"
      class="w-4 h-4 ml-2 transition-transform duration-200 transform shrink-0">
      <path fill-rule="evenodd"
        d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
        clip-rule="evenodd" />
    </svg>
  </button>

  <!-- Dropdown -->
  <ul x-show="open"
    x-transition:enter="transition ease-out duration-200"
    x-transition:enter-start="opacity-0 translate-y-1"
    x-transition:enter-end="opacity-100 translate-y-0"
    x-transition:leave="transition ease-in duration-150"
    x-transition:leave-start="opacity-100 translate-y-0"
    x-transition:leave-end="opacity-0 translate-y-1"
    class="absolute z-10 w-full mt-2 bg-white border border-gray-200 rounded-md shadow-lg">
    <template x-for="opt in options" :key="opt.value">
      <li>
        <a href="#" @click.prevent="select(opt.value, opt.label)"
          class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-[var(--color-3)] transition">
          <span x-text="opt.label"></span>
        </a>
      </li>
    </template>
  </ul>

  <input type="hidden" name="businessCategory" x-model="selectedValue">
</div>
          <!-- Message -->
          <div class="col-span-full">
            <label for="message"
              class="block mb-2 text-[var(--color-3)] text-base font-medium">
              Tin nhắn
            </label>
            <textarea id="message" name="messageCustomer" rows="4"
              class="w-full text-[var(--color-3)] shadow-sm bg-transparent text-lg font-normal leading-7 rounded-2xl border border-gray-200 focus:outline-none p-4 resize-none"
              oninput="this.setAttribute('data-has-content', this.value ? 'true' : '')"
              placeholder="Nhập nội dung bạn muốn gửi..."></textarea>
          </div>

          <!-- Submit Button -->
          <div class="col-span-full mt-4">
            <button type="submit"
              class="cursor-pointer w-full h-12 text-base font-semibold rounded-full transition-all duration-300 bg-[var(--color-4)] text-[var(--color-2)] hover:opacity-100 opacity-90 shadow-md">
              Gửi
            </button>
          </div>
          </form>

          <!-- Custom Input Styling -->
          <style>
            input[data-has-content="true"]+label,
            textarea[data-has-content="true"]+label,
            select[data-has-content="true"]+label {
              top: 0 !important;
              font-size: 0.875rem;
              color: #000;
            }
          </style>

          <!-- Input số -->
          <script>
            const phoneInput = document.getElementById('phone');
            phoneInput?.addEventListener('input', function () {
              this.value = this.value.replace(/[^0-9]/g, '');
              this.setAttribute('data-has-content', this.value ? 'true' : '');
            });

            const form = document.getElementById("contact-form");
            form?.addEventListener("submit", async(e) => {
              e.preventDefault();

              const nameCustomer = (document.getElementById("name") as HTMLInputElement)?.value.trim();
              const email = (document.getElementById("email") as HTMLInputElement)?.value.trim();
              const phone = (document.getElementById("phone") as HTMLInputElement)?.value.trim();
              const businessType = (document.querySelector('input[name="businessType"]') as HTMLInputElement)?.value;
              const businessCategory = (document.querySelector('input[name="businessCategory"]') as HTMLInputElement)?.value;
              const messageCustomer = (document.getElementById("message") as HTMLTextAreaElement)?.value.trim();

              // Kiểm tra số điện thoại
              const isValidPhone = /^0\d{9}$/.test(phone);
              if (!isValidPhone) {
                alert("❌ Số điện thoại không hợp lệ. Vui lòng nhập đúng 10 chữ số và bắt đầu bằng số 0.");
                return;
              }

              // Kiểm tra định dạng email
              const isValidEmail = /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email);
              if (!isValidEmail) {
                alert("❌ Email không hợp lệ. Vui lòng nhập đúng định dạng email.");
                return;
              }

              const payload = {
                nameCustomer,
                email,
                phone,
                businessType,
                businessCategory,
                messageCustomer,
              };

              const res = await fetch("/api/new-contact", {
                method: "POST",
                headers: {
                  "Content-Type": "application/json",
                },
                body: JSON.stringify(payload),
              });

              if (res.ok) {
                alert("✅ Đã gửi liên hệ, chúng tôi sẽ liên lạc với bạn trong thời gian sớm nhất!");
                form.reset();
              } else {
                const contentType = res.headers.get("content-type");
                if (contentType && contentType.includes("application/json")) {
                  const data = await res.json();
                  alert("❌ " + data.error + "\nThiếu: " + data.missing.join(", "));
                } else {
                  const error = await res.text();
                  alert("❌ Lỗi khi gửi liên hệ: " + error);
                }
              }
            });
          </script>
          
        </div>
      </div>
    </div>
  </div>
</section>
